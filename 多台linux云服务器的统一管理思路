
-# 多台linux云服务器统一管理思路
相信很多linux管理员，运维工程师都遇到过自动化运维的需求，如批量安装系统，批量安装软件，批量上传文件， 
批量处理服务器上的问题等工作，也就是多台linux服务器如何统一管理的问题。在这，我分享下我的一个管理思路，  
纯属个人想法和思路，有什么遗漏或不足的地方请大家指点：  

步骤1：
罗列全部服务器的信息，将其分类，比如一级分类按系统可分为：ubuntu、redhat、centos等、二级分类可以按服务进行分类：  
nginx、sql、redis、python、java等；然后再把服务器的信息、服务器别名及其分类一起写到excel文档（若是有CMDB资源管理系统，
也可以将信息录入到CMDB系统，没有也可以找一个开源的装来使用），方便管理这些服务器信息
步骤2：
找一台办公内网linux服务器来做管理点（注：为啥考虑内网呢？因为内网的安全性比较高。这台内网服务器最好给它加个蓄电池，
防止办公断电再加个vpn，可以实现远程办公，为了防止这台服务器挂了，你也可以考虑弄多一台备用管理点，公司的外网是静态ip），
在这台内网linux服务器装上生成秘钥对（备份密钥对到本地，防止这台服务器系统奔溃重装，秘钥丢了），然后把公钥分别配置到需要
管理的linux云服务器上（第一次需要一台一台加，建议使用秘钥登录服务器，把密码登录去掉。安全），并配置好防火墙，ok！
前期的准备工作就差不多了！接下来是一些批量管理工具的安装
步骤3：
（1）在这台管理点服务器上安装批量管理工具ansible，（本人觉得在众多批量管理工具中ansible比较好用，为啥不用自己写一个工具呢？
毕竟自己写一个批量管理工具很花费时间，估计功能和稳定性也没有成熟开源的工具好用，所以，要善用开源项目），安装后，写个脚本将
之前写到excel的服务器信息中的对应每台服务器的别名写到ansible的hosts（记得分组），服务器的hosts绑定别名和ip.然后使用
ansible -m ping 测试下每台服务器是否已经把秘钥登录以及防火墙是否正确。若没有问题，你就可以尽情的享受ansible给你带来
的方便和快捷，比如写个检查mysql连接数的脚本，发到ubuntu下面的所有mysql服务器中执行，或者playbook做一些标准化的工作
例如：服务器初始化，服务的初始化、启动、关闭、重启等工作，但一定要谨慎，脚本一旦写错了，影响到的服务器是ansible指定
的服务器数量，所以在执行批量脚本的时候，要谨慎！谨慎！谨慎！
（2）zabbix服务器的安装。在服务器管理中，我一向很重视服务器的各项监控，用自动化监控来
代替人工的检测，是非常有必要的。而选择一个比较好的监控软件，也能帮你减少很多工作量；我选择zabbix监控的原因主要有：
1，有自动发现服务器功能，添加服务器配置快 2，部署简单，资源占用非常小，采集速度快 3，架构的可扩展性强，支持zabbix api开发。
zabbix服务器可以买一台全新的云服务器来搭建，zabbix-agent可以使用ansible批量源码安装，zabbix-server配置了服务器的自动发现
已经自动添加模板，这样一来，可以将一套zabbix监控快速的部署完成，后期只要不断完善监控项，继续添加服务器就ok啦
（3）jenkins自动发布系统的安装。jenkins安装到ansible那台服务器上（省去秘钥登录key配置的麻烦），jenkins嘛，
主要解决代码发布问题，配合自己搭建的gitlab仓库，可以做到开发运维一体化，这个就不多说了，大家自己去琢磨下，
相信大家会有很好的收获！
（4）如果开发人员或测试人员需要到服务器上操作的话，还要安装一个堡垒机，统一管理他们的登录，对他们的操作记录进行安全审计，
建议使用jumpserver开源堡垒机。
结论：把基本环境搭建好，多运用脚本去处理问题，多使用自动化和批量管理工具去管理服务器，可以达到以逸待劳的效果。
